<?php

namespace Mongobox\Bundle\UsersBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Mongobox\Bundle\UsersBundle\Entity\User;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
    /**
     * Find user by username, firstname and lastname
     *
     * @param string $value
     * @param User $currentUser
     *
     * @return array
     */
    public function findUser($value, User $currentUser)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();

        $qb->select('u')
            ->from('MongoboxUsersBundle:User', 'u')
            ->where("u.username LIKE :value")
            ->orWhere("u.firstname LIKE :value")
            ->orWhere("u.lastname LIKE :value")
            ->andWhere("u.id != :currentUser")
            ->orderBy('u.username', 'ASC')
            ->setMaxResults(5)
            ->setParameters(
                array(
                    'currentUser' => $currentUser->getId(),
                    'value'       => '%' . $value . '%'
                )
            );

        $query = $qb->getQuery();

        return $query->getResult();
    }

    /**
     * Retrieves the total number of users in the given group.
     * If no group is given, then retrieves the total number of users in the application.
     *
     * @param  integer $groupId
     *
     * @return integer
     */
    public function getCount($groupId = null)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();

        $qb
            ->select('count(u.id)')
            ->from('MongoboxUsersBundle:User', 'u');

        if ($groupId !== null) {
            $qb
                ->innerJoin('u.groups', 'g')
                ->where('g.id = :group')
                ->setParameter('group', $groupId);
        }

        $query = $qb->getQuery();

        return $query->getSingleScalarResult();
    }

    /**
     * Retrieves the last registered user or null if no registration was found.
     *
     * @return \Mongobox\Bundle\UsersBundle\Entity\User | null
     */
    public function getLastRegistered()
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();

        $qb
            ->select('u')
            ->from('MongoboxUsersBundle:User', 'u')
            ->orderBy('u.date_create', 'DESC')
            ->setMaxResults(1);

        $query = $qb->getQuery();

        try {
            return $query->getSingleResult();
        } catch (\Doctrine\Orm\NoResultException $e) {
            return null;
        }
    }
}
